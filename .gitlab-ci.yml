image: node:8

before_script:
  - export VERSION=$(node -e "const p = require('./package.json'); console.log(p.version)")
  - export VERSION_MAJOR_ONLY=2.2

dockerhub-test:
  stage: deploy
  services: 
    - gitlab/dind
  script:
    - echo $VERSION
    - echo $VERSION_MAJOR_ONLY
    - docker info
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD

.test:
  script:
   - npm i
   - npm run test
  coverage: /All files\s*\|\s*([\d\.]+)/

.codequality:
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay
  allow_failure: true
  services:
    - docker:dind
  script:
    - docker pull codeclimate/codeclimate
    - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -e nodesecurity -f json > codeclimate.json || true
  artifacts:
    paths: [codeclimate.json]

.npm:
  stage: deploy
  only:
    - tags
  script:
    - npm config set "//registry.npmjs.org/:_authToken" $NPM_TOKEN
    - npm publish

.dockerhub:
  stage: deploy
  image: gitlab/dind
  only:
    - tags
  script:
    - VERSION=$(cat package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
    - echo $VERSION
    - docker info
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
    - docker build -t ramielcreations/caravaggio:$VERSION .
    - docker tag ramielcreations/caravaggio:$VERSION ramielcreations/caravaggio:latest
    - docker images
    - docker push ramielcreations/caravaggio:$VERSION
    - docker push ramielcreations/caravaggio:latest

# Gitlab Pages
.pages:
  only:
    - master
  script:
    - cd website
    - npm install
    - npm run build
    - cp -r build/caravaggio ../public
  artifacts:
    paths:
      - public